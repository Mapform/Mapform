// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

// Managed through Clerk and synced with Prisma
model User {
    id                      String                   @id @default(uuid())
    clerkId                 String                   @unique
    firstName               String
    lastName                String
    email                   String
    imageUrl                String?
    organizationMemberships OrganizationMembership[]
    workspaceMemberships    WorkspaceMembership[]
}

// Managed through Clerk and synced with Prisma
model Organization {
    id         String                   @id @default(uuid())
    clerkId    String                   @unique
    name       String
    slug       String                   @unique
    imageUrl   String?
    members    OrganizationMembership[]
    workspaces Workspace[]
}

// Managed through Clerk and synced with Prisma
model OrganizationMembership {
    id             String       @id @default(uuid())
    clerkId        String       @unique
    organizationId String
    userId         String
    role           String
    user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
}

enum WorkspaceMembershipRole {
    OWNER
    MEMBER
}

// We store as an explicit many-to-many relationship because we need to store
// additional details on the relationship itself, namely role.
model WorkspaceMembership {
    id          String                  @id @default(uuid())
    userId      String
    workspaceId String
    role        WorkspaceMembershipRole
    user        User                    @relation(fields: [userId], references: [id], onDelete: Cascade)
    workspace   Workspace               @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}

model Workspace {
    id             String                @id @default(uuid())
    name           String
    slug           String
    members        WorkspaceMembership[]
    organizationId String
    organization   Organization          @relation(fields: [organizationId], references: [id])

    @@unique([organizationId, slug])
}
